// Generated by CoffeeScript 1.4.0

define(['./../collections/byteCollection', 'backbone'], function(ByteCollection, Backbone) {
  return Backbone.Model.extend({
    idAttribute: "_id",
    defaults: function(){
    	return {
	    	
	    		bytes: [],
	    	
	    		name: "",
	    	
	    		active: true,
	    	
	    		description: ""
 		};
    },
    commit: function(callback){
        var self = this;
        console.log('commit');
        self.save(null, {
            success: function(model, resp, options){
                console.log("saved!");
                console.log(resp);
                //model.stopListening();
                model.set({'bytes': new ByteCollection(model.get('bytes'))}, {silent: true});
                model.listenTo(model.get('bytes'), 'change', function(){
                    model.commit(function(){
                        model.trigger('change');
                    });
                });
                model.get('bytes').on('add', function(){
                    model.commit(function(){
                        model.trigger('change');
                    });
                });
                model.get('bytes').on('remove', function(){
                    model.commit(function(){
                        model.trigger('change');
                    });
                });
                if(callback instanceof Function){ 
                    callback();
                }
            },
            error: function(){
                console.log("couldn't save");
            }, 
            silent: true
        });
    },
    initialize: function(){
        console.log("creating word");
        var self = this;
        this.set({'bytes': new ByteCollection(this.get('bytes'))}, {silent: true});
        this.get('bytes').on('add', function(){
            self.commit(function(){
                self.trigger('change');
            });
        });
        this.get('bytes').on('remove', function(){
            self.commit(function(){
                self.trigger('change');
            });
        });
        this.listenTo(this.get('bytes'), 'change', function(e){
            console.log("bytes changed");
            self.commit(function(){
                self.trigger('change');
            });
        }, this);
        this.on('change:name', self.commit, this);
        this.on('change:description', self.commit, this);
        this.on('change:active', self.commit, this);
        //self.on('sync', self.onSync, self);
        //reset bytes to turn it back into a colleciton
        //this.commit();
    }
  });
});
